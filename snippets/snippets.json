{
  "D3 Line Chart": {
		"prefix": "d3s.lineChart",
		"body": [
      "// Template from https://bl.ocks.org/mbostock/3883245",
			"var svg = d3.select('svg'),\r",
			"margin = {top: 20, right: 20, bottom: 30, left: 50},\r",
			"width = +svg.attr('width') - margin.left - margin.right,\r",
			"height = +svg.attr('height') - margin.top - margin.bottom,\r",
			"g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r",
			"\r",
			"var parseTime = d3.timeParse('%d-%b-%y');\r",
			"\r",
			"var x = d3.scaleTime()\r",
			"  .rangeRound([0, width]);\r",
			"\r",
			"var y = d3.scaleLinear()\r",
			"  .rangeRound([height, 0]);\r",
			"\r",
			"var line = d3.line()\r",
			"  .x(function(d) { return x(d.date); })\r",
			"  .y(function(d) { return y(d.close); });\r",
			"\r",
			"d3.tsv('data.tsv', function(d) {\r",
			"  d.date = parseTime(d.date);\r",
			"  d.close = +d.close;\r",
			"  return d;\r",
			"}, function(error, data) {\r",
			"  if (error) throw error;\r",
			"\r",
			"x.domain(d3.extent(data, function(d) { return d.date; }));\r",
			"y.domain(d3.extent(data, function(d) { return d.close; }));\r",
			"\r",
			"  g.append('g')\r",
			"      .attr('transform', 'translate(0,' + height + ')')\r",
			"      .call(d3.axisBottom(x))\r",
			"    .select('.domain')\r",
			"      .remove();\r",
			"\r",
			"  g.append('g')\r",
			"      .call(d3.axisLeft(y))\r",
			"    .append('text')\r",
			"      .attr('fill', '#000')\r",
			"      .attr('transform', 'rotate(-90)')\r",
			"      .attr('y', 6)\r",
			"      .attr('dy', '0.71em')\r",
			"      .attr('text-anchor', 'end')\r",
			"      .text('Price ($)');\r",
			"\r",
			"  g.append('path')\r",
			"    .datum(data)\r",
			"    .attr('fill', 'none')\r",
			"    .attr('stroke', 'steelblue')\r",
			"    .attr('stroke-linejoin', 'round')\r",
			"    .attr('stroke-linecap', 'round')\r",
			"    .attr('stroke-width', 1.5)\r",
			"    .attr('d', line);\r",
			"});"
		],
		"description": "D3 Line Chart - https://bl.ocks.org/mbostock/3883245"
	},
	"D3 Bar Chart": {
		"prefix": "d3s.barChart",
		"body": [
      "// Template from https://bl.ocks.org/mbostock/3885304\r",
			"var svg = d3.select(\"svg\"),\r",
			"    margin = {top: 20, right: 20, bottom: 30, left: 40},\r",
			"    width = +svg.attr(\"width\") - margin.left - margin.right,\r",
			"    height = +svg.attr(\"height\") - margin.top - margin.bottom;\r",
			"\r",
			"//Generates a categorical x axis and a numeric y axis\r",
			"var x = d3.scaleBand().rangeRound([0, width]).padding(0.1),\r",
			"    y = d3.scaleLinear().rangeRound([height, 0]);\r",
			"\r",
			"//Generates chart container that is adjusted by margin parameters\r",
			"var g = svg.append(\"g\")\r",
			"    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r",
			"\r",
			"//Reads data from tsv\r",
			"d3.tsv(\"data.tsv\", function(d) {\r",
			"  //set up your data transforms here\r",
			"  d.name = \"\";\r",
			"  d.value = + 0;\r",
			"  return d;\r",
			"}, function(error, data) {\r",
			"  if (error) throw error;\r",
			"\r",
			"  //Sets categorical x domain based on given column\r",
			"  x.domain(data.map(function(d) { return d.name; }));\r",
			"  y.domain([0, d3.max(data, function(d) { return d.value; })]);\r",
			"\r",
			"  //Draw x axis and adjust for container size\r",
			"  g.append(\"g\")\r",
			"      .attr(\"class\", \"axis axis--x\")\r",
			"      .attr(\"transform\", \"translate(0,\" + height + \")\")\r",
			"      .call(d3.axisBottom(x));\r",
			"  //Draw y axis with various styling and transforms\r",
			"  g.append(\"g\")\r",
			"      .attr(\"class\", \"axis axis--y\")\r",
			"      .call(d3.axisLeft(y).ticks(10, \"%\"))\r",
			"    .append(\"text\")\r",
			"      .attr(\"transform\", \"rotate(-90)\")\r",
			"      .attr(\"y\", 6)\r",
			"      .attr(\"dy\", \"0.71em\")\r",
			"      .attr(\"text-anchor\", \"end\")\r",
			"      .text(\"Value\");\r",
			"  //Draw bars for each name and value in data\r",
			"  g.selectAll(\".bar\")\r",
			"    .data(data)\r",
			"    .enter().append(\"rect\")\r",
			"      .attr(\"class\", \"bar\")\r",
			"      .attr(\"x\", function(d) { return x(d.name); })\r",
			"      .attr(\"y\", function(d) { return y(d.value); })\r",
			"      .attr(\"width\", x.bandwidth())\r",
			"      .attr(\"height\", function(d) { return height - y(d.value); });//draws bars on screen from top to bottom\r",
			"});"
		],
		"description": "D3 barchart - Taken from https://bl.ocks.org/mbostock/3885304"
  },
  "D3 Piechart": {
		"prefix": "d3s.pieChart",
		"body": [
			"// Template taken from https://bl.ocks.org/mbostock/3887235\r",
			"//dimensions declarations\r",
			"var width = 650;\r",
			"var height = 400;\r",
			"var margin = {top: 20, right: 15, bottom: 30, left: 40};\r",
			"var w = width - margin.left - margin.right;\r",
			"var h = height - margin.top - margin.bottom;\r",
			"\r",
			"//dataset declarations\r",
			"var csv = \"flavors_of_cacao.csv\";//Your CSV file here;\r",
			"var dataset;\r",
			"\r",
			"d3.csv(csv, function(error, data) {\r",
			"    //read in the data\r",
			"    if (error) return console.warn(error);\r",
			"        data.forEach(function(d) {\r",
			"            d.name = d.Company; //Your data name here\r",
			"            d.value1 = + d.Rating; //Your data value here\r",
			"            d.value2 = + d.CocoaPercent.slice(0, 2)\r",
			"    });\r",
			"    dataset = data;    \r",
			"\r",
			"//pie charts\r",
			"\r",
			"var svg = d3.select('body').append('svg'),\r",
			"    width = +svg.attr(\"width\"),\r",
			"    height = +svg.attr(\"height\"),\r",
			"    radius = Math.min(width, height) / 2,\r",
			"    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\r",
			"\r",
			"var color = d3.scaleOrdinal([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\r",
			"\r",
			"var pie = d3.pie()\r",
			"    .sort(null)\r",
			"    .value(function(d) { return d.value2; });\r",
			"\r",
			"//Calculate pie chart arc  geometries\r",
			"var path = d3.arc()\r",
			"    .outerRadius(radius - 10)\r",
			"    .innerRadius(0);\r",
			"\r",
			"//radius offsets put label to the edge of pie\r",
			"var label = d3.arc()\r",
			"    .outerRadius(radius - 40)\r",
			"    .innerRadius(radius - 40);\r",
			"\r",
			"//Generate pie slices based on data\r",
			"var arc = g.selectAll(\".arc\")\r",
			"    .data(pie(dataset))\r",
			"    .enter().append(\"g\")\r",
			"    .attr(\"class\", \"arc\");\r",
			"\r",
			"    //Color the pie segments based on unique names\r",
			"    arc.append(\"path\")\r",
			"      .attr(\"d\", path)\r",
			"      .attr(\"fill\", function(d) { return color(d.name); });\r",
			"\r",
			"    //Adds text to pie chart\r",
			"    arc.append(\"text\")\r",
			"      .attr(\"transform\", function(d) { return \"translate(\" + label.centroid(d) + \")\"; })\r",
			"      .attr(\"dy\", \"0.35em\")\r",
			"      .text(function(d) { return d.value2; });\r",
			"});"
		],
		"description": "D3 PieChart - Taken from https://bl.ocks.org/mbostock/3887235"
	}
}